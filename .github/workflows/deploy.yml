name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/frontend:${{ github.sha }} ./apps/frontend
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/gateway:${{ github.sha }} ./apps/gateway
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/workers:${{ github.sha }} ./apps/workers
          
          docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/frontend:${{ github.sha }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/gateway:${{ github.sha }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/workers:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          # Update image tags in k8s manifests
          sed -i "s|IMAGE_TAG|${{ github.sha }}|g" k8s/*.yaml
          
          # Apply manifests
          kubectl apply -f k8s/

      - name: Wait for deployment
        run: |
          kubectl rollout status deployment/frontend -n image-search
          kubectl rollout status deployment/gateway -n image-search
          kubectl rollout status deployment/workers -n image-search

      - name: Health check
        run: |
          # Wait for services to be ready
          sleep 30
          
          # Check frontend
          curl -f http://frontend.image-search.svc.cluster.local/health || exit 1
          
          # Check gateway
          curl -f http://gateway.image-search.svc.cluster.local/api/v1/health || exit 1
          
          # Check workers
          curl -f http://workers.image-search.svc.cluster.local/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "Deployment to production successful!"
          # Add notification logic here (Slack, email, etc.)

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "Deployment to production failed!"
          # Add notification logic here (Slack, email, etc.)
